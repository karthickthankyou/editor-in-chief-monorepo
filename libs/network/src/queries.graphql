query articles(
  $skip: Int
  $take: Int
  $orderBy: [ArticleOrderByWithRelationInput!]
  $where: ArticleWhereInput
) {
  articles(skip: $skip, take: $take, orderBy: $orderBy, where: $where) {
    id
    title
    body
    createdAt
    tags
  }
}

fragment articlesDetails on Article {
  id
  title
  createdAt
  tags
  published
}

query articlesForAdmin(
  $skip: Int
  $take: Int
  $orderBy: [ArticleOrderByWithRelationInput!]
  $where: ArticleWhereInput
) {
  articlesForAdmin(skip: $skip, take: $take, orderBy: $orderBy, where: $where) {
    ...articlesDetails
  }
}

query myArticles(
  $skip: Int
  $take: Int
  $orderBy: [ArticleOrderByWithRelationInput!]
  $where: ArticleWhereInput
) {
  myArticles(skip: $skip, take: $take, orderBy: $orderBy, where: $where) {
    ...articlesDetails
  }
}

query User($where: UserWhereUniqueInput) {
  user(where: $where) {
    name
    image
    updatedAt
    createdAt
    uid
  }
}

mutation CreateUser($createUserInput: CreateUserInput!) {
  createUser(createUserInput: $createUserInput) {
    uid
  }
}

query Article($where: ArticleWhereUniqueInput) {
  article(where: $where) {
    id
    reporter {
      user {
        image
        name
        uid
      }
    }
    body
    createdAt
    title
    tags
  }
}

query feedback($where: FeedbackWhereUniqueInput) {
  feedback(where: $where) {
    id
    uid
    articleId
    type
  }
}

query MyFeedback($articleId: Int!) {
  myFeedback(articleId: $articleId) {
    id
    uid
    articleId
    type
  }
}

mutation giveMyFeedback($articleId: Int!, $type: String!, $feedbackId: Int) {
  giveMyFeedback(articleId: $articleId, type: $type, feedbackId: $feedbackId) {
    id
  }
}

fragment userDetails on User {
  image
  name
  uid
}

query reporterMe {
  reporterMe {
    user {
      ...userDetails
    }
  }
}

query adminMe {
  adminMe {
    user {
      ...userDetails
    }
  }
}

query admins {
  admins {
    user {
      ...userDetails
    }
    createdAt
  }
}

query reporters {
  reporters {
    user {
      ...userDetails
    }
    createdAt
  }
}

mutation updateArticle($updateArticleInput: UpdateArticleInput!) {
  updateArticle(updateArticleInput: $updateArticleInput) {
    id
  }
}

mutation createReporter($createReporterInput: CreateReporterInput!) {
  createReporter(createReporterInput: $createReporterInput) {
    uid
  }
}

mutation createAdmin($createAdminInput: CreateAdminInput!) {
  createAdmin(createAdminInput: $createAdminInput) {
    uid
  }
}

mutation createArticle($createArticleInput: CreateArticleInput!) {
  createArticle(createArticleInput: $createArticleInput) {
    id
  }
}

query relatedArticles {
  relatedArticles {
    article {
      id
      title
      body
      createdAt
      tags
    }
    score
  }
}
